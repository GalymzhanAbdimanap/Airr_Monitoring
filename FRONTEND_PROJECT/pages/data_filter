import streamlit as st
import pandas as pd
import plotly.express as px
from datetime import datetime, timedelta
import requests

st.title("üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å—Ç–∞–Ω—Ü–∏—è–º")

# –í—ã–±–æ—Ä –¥–∞—Ç
start_date = st.date_input("–ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞", datetime.today() - timedelta(days=7))
end_date = st.date_input("–ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞", datetime.today())

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç–∞–Ω—Ü–∏–π –∏–∑ –±—ç–∫–∞
stations_list = requests.get("http://127.0.0.1:8855/stations/").json().get("stations", [])
station_names = [s["device_name"] for s in stations_list]

col1, col2 = st.columns(2)
with col1:
    station1 = st.selectbox("–°—Ç–∞–Ω—Ü–∏—è 1", station_names)
with col2:
    station2 = st.selectbox("–°—Ç–∞–Ω—Ü–∏—è 2", [s for s in station_names if s != station1])

# –í—ã–±–æ—Ä –º–µ—Ç—Ä–∏–∫
metrics = ["pm25", "pm10", "co2", "rh", "temp", "etvoc"]
selected_metric = st.selectbox("–ú–µ—Ç—Ä–∏–∫–∞", metrics)

# –ö–Ω–æ–ø–∫–∞
if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ"):
    with st.spinner("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö..."):
        url = "http://172.20.107.4:8855/pollution/filter/"
        params = {
            "start_date": start_date.strftime("%Y-%m-%d 00:00:00"),
            "end_date": end_date.strftime("%Y-%m-%d 00:00:00"),
            "station1": station1,
            "station2": station2
        }
        data = requests.get(url, params=params).json()
    print(start_date.strftime("%Y-%m-%d 00:00:00"))
    print(end_date.strftime("%Y-%m-%d 23:59:59"))
    print(station1)
    print(station2)
    if data:
        df = pd.DataFrame(data)
        if not df.empty:
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ
            df["datetime"] = pd.to_datetime(df["datetime"], format="mixed", errors="coerce")
            df = df.sort_values("datetime")

            # –ì—Ä–∞—Ñ–∏–∫
            fig = px.line(df, x="datetime", y=selected_metric, color="sensor_id",
                          title=f"{selected_metric.upper()} –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—è—Ö {station1} –∏ {station2}")
            st.plotly_chart(fig, use_container_width=True)

            # –¢–∞–±–ª–∏—Ü–∞
            st.dataframe(df, use_container_width=True)
        else:
            st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫.")
    else:
        st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞.")
